/*
 * This file is generated by jOOQ.
 */
package com.devproserv.courses.jooq.tables.records;


import com.devproserv.courses.jooq.tables.Courses;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursesRecord extends UpdatableRecordImpl<CoursesRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = -576697528;

    /**
     * Setter for <code>coursedb.courses.course_id</code>.
     */
    public void setCourseId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>coursedb.courses.course_id</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>coursedb.courses.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>coursedb.courses.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>coursedb.courses.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>coursedb.courses.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>coursedb.courses.lect_id</code>.
     */
    public void setLectId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>coursedb.courses.lect_id</code>.
     */
    public Integer getLectId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Courses.COURSES.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Courses.COURSES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Courses.COURSES.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Courses.COURSES.LECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value1(Integer value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value4(Integer value) {
        setLectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoursesRecord
     */
    public CoursesRecord() {
        super(Courses.COURSES);
    }

    /**
     * Create a detached, initialised CoursesRecord
     */
    public CoursesRecord(Integer courseId, String name, String description, Integer lectId) {
        super(Courses.COURSES);

        set(0, courseId);
        set(1, name);
        set(2, description);
        set(3, lectId);
    }
}
